@page "/login"
@using ArtberryApp.Models;
@using Newtonsoft.Json;
@inject ArtberryApp.Services.AppService AppService;
@inject NavigationManager NavManager;

<style>
    body{
        background-image: url('imgs\\wallpaper.png');
        background-repeat: no-repeat;
        width:100%;
    }
</style>
<br/>
<EditForm Model="@loginModel" OnValidSubmit="Submit" style="margin-left:20%; margin-top:20%;">
    <DataAnnotationsValidator />
    <div class="form-group" style="width:80%">
        <input type="text" @bind-value="loginModel.Username" class="form-control" placeholder="Enter Username">
        <ValidationMessage For="@(()=> loginModel.Username)" />
    </div>
    <br />
    <div class="mt-2 form-group" style="width:80%">
        
        <input type="password" @bind-value="loginModel.Password" class="form-control" placeholder="Password">
        <ValidationMessage For="@(()=> loginModel.Password)" />
    </div>
    <br />
    <div class="mt-2" style="margin-left:35%;">
        <button class="btn btn-primary" type="submit">
            <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
            Login
        </button>
    </div>
</EditForm>

@code {
    LoginModel loginModel = new LoginModel();

    private string _spinnerClass = "";

     protected override async Task OnInitializedAsync()
    {
        var expired = await SecureStorage.GetAsync("expired");

        if (expired == "1")
        {
             SecureStorage.Remove("expired");
            await App.Current.MainPage.DisplayAlert("", "You session has expired or you logged in from another device", "OK");
        }

    }


    private async void Submit()
    {
        _spinnerClass = "spinner-border spinner-border-sm";

        var response = await AppService.Login(loginModel);
        if (response != null && !string.IsNullOrEmpty(response.Id))
        { 
            await SecureStorage.SetAsync("session", response.Id);
            Setting.Session = response.Id;
            NavManager.NavigateTo("/red");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Oops", "Invalid username or password", "OK");
        }

        _spinnerClass = "";
        this.StateHasChanged();
    }

}